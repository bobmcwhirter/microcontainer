/*
* JBoss, Home of Professional Open Source.
* Copyright 2006, Red Hat Middleware LLC, and individual contributors
* as indicated by the @author tags. See the copyright.txt file in the
* distribution for a full listing of individual contributors. 
*
* This is free software; you can redistribute it and/or modify it
* under the terms of the GNU Lesser General Public License as
* published by the Free Software Foundation; either version 2.1 of
* the License, or (at your option) any later version.
*
* This software is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
* Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public
* License along with this software; if not, write to the Free
* Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
* 02110-1301 USA, or see the FSF site: http://www.fsf.org.
*/ 
package org.jboss.test.aop.junit;

import java.lang.reflect.Constructor;
import java.lang.reflect.Method;

import org.jboss.xb.binding.sunday.unmarshalling.SchemaBindingResolver;

/**
 * FIXME Temporary workaround since I cannot see the JBossXBTestDelegate 
 * from container-test project with maven
 * 
 * @author <a href="kabir.khan@jboss.com">Kabir Khan</a>
 * @version $Revision: 1.1 $
 */
class JBossXBTestDelegate
{
   Class<?> clazz;
   Object delegate;
   Method unmarshal;
   
   JBossXBTestDelegate(Class<?> clazz)
   {
      this.clazz = clazz;
   }
   
   void setUp()
   {
      try
      {
         Class<?> delegate = Class.forName("org.jboss.test.xb.builder.JBossXBTestDelegate");
         Constructor<?> ctor = delegate.getDeclaredConstructor(Class.class);
         this.delegate = ctor.newInstance(clazz);
         
         Method setUp = delegate.getMethod("setUp");
         setUp.invoke(this.delegate);

         Class<?> resolver = Class.forName("org.jboss.xb.binding.sunday.unmarshalling.SchemaBindingResolver");
         this.unmarshal = delegate.getMethod("unmarshal", String.class, resolver); 
      }
      catch (Exception e)
      {
         // AutoGenerated
         throw new RuntimeException(e);
      }
   }

   public Object unmarshal(String url, SchemaBindingResolver resolver) throws Exception
   {
      return unmarshal.invoke(delegate, url, resolver);
   }
}
