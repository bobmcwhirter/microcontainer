<?xml version="1.0" encoding="UTF-8"?>

<deployment xmlns="urn:jboss:bean-deployer:2.0">

   <bean name="MBeanServer" class="java.lang.Object">
      <constructor factoryClass="javax.management.MBeanServerFactory" factoryMethod="createMBeanServer"/>
   </bean>

   <bean name="AspectManager" class="org.jboss.aop.AspectManager">
      <constructor factoryClass="org.jboss.aop.AspectManager" factoryMethod="instance"/>
   </bean>

   <beanfactory name="JMXAdvice" class="org.jboss.aop.microcontainer.aspects.jmx.JMXIntroduction">
      <property name="mbeanServer"><inject bean="MBeanServer"/></property>
   </beanfactory>

   <beanfactory name="MetaDataContextAdvice" class="org.jboss.test.microcontainer.support.MetaDataContextInterceptor">
      <property name="annotation">org.jboss.aop.microcontainer.aspects.jmx.JMX</property>
   </beanfactory>

   <bean name="JMXAspect" class="org.jboss.aop.microcontainer.beans.Aspect">
      <property name="advice"><inject bean="JMXAdvice"/></property>
      <property name="manager"><inject bean="AspectManager"/></property>
   </bean>

   <bean name="MetaDataContextAspect" class="org.jboss.aop.microcontainer.beans.Aspect">
      <property name="advice"><inject bean="MetaDataContextAdvice"/></property>
      <property name="manager"><inject bean="AspectManager"/></property>
   </bean>

   <bean name="JMXIntroduction" class="org.jboss.aop.microcontainer.beans.IntroductionBinding">
      <property name="classes">@org.jboss.aop.microcontainer.aspects.jmx.JMX</property>
      <property name="interfaces">
         <list elementClass="java.lang.String">
            <value>org.jboss.kernel.spi.dependency.KernelControllerContextAware</value>
         </list>
      </property>
      <property name="manager"><inject bean="AspectManager"/></property>
   </bean>

   <bean name="JMXBinding" class="org.jboss.aop.microcontainer.beans.AspectBinding">
      <property name="pointcut">execution(* $instanceof{org.jboss.kernel.spi.dependency.KernelControllerContextAware}->$implements{org.jboss.kernel.spi.dependency.KernelControllerContextAware}(..))</property>
      <property name="aspect"><inject bean="JMXAspect" property="definition"/></property>
      <property name="manager"><inject bean="AspectManager"/></property>
   </bean>

   <bean name="MetaDataContextBinding" class="org.jboss.aop.microcontainer.beans.AspectBinding">
      <property name="pointcut">execution(* org.jboss.test.microcontainer.support.SimpleBeanImpl->*(..))</property>
      <property name="aspect"><inject bean="MetaDataContextAspect" property="definition"/></property>
      <property name="manager"><inject bean="AspectManager"/></property>
   </bean>

   <bean name="Bean" class="org.jboss.test.microcontainer.support.SimpleBeanImpl">
      <annotation>@org.jboss.aop.microcontainer.aspects.jmx.JMX(name="", exposedInterface=org.jboss.test.microcontainer.support.SimpleBean.class)</annotation>
   </bean>

   <bean name="Bean1" class="org.jboss.test.microcontainer.support.SimpleBeanImpl">
      <annotation>@org.jboss.aop.microcontainer.aspects.jmx.JMX(name="test:name=NotBean1", exposedInterface=org.jboss.test.microcontainer.support.SimpleBeanImplMBean.class)</annotation>
   </bean>

   <bean name="AnnotatedBean" class="org.jboss.test.microcontainer.support.SimpleBeanAnnotatedImpl"/>

   <bean name="AnnotatedBean2" class="org.jboss.test.microcontainer.support.SimpleBeanAnnotatedImpl2"/>

   <bean name="DirectRegistrant" class="org.jboss.test.microcontainer.support.JmxRegistrantDirect">
      <annotation>@org.jboss.aop.microcontainer.aspects.jmx.JMX(name="test:name=DirectRegistrant", exposedInterface=org.jboss.test.microcontainer.support.JmxRegistrantDirectMBean.class,registerDirectly=true)</annotation>
   </bean>

   <bean name="NotDirectRegistrant" class="org.jboss.test.microcontainer.support.JmxRegistrantDirect">
      <annotation>@org.jboss.aop.microcontainer.aspects.jmx.JMX(name="test:name=NotDirectRegistrant", exposedInterface=org.jboss.test.microcontainer.support.JmxRegistrantDirectMBean.class,registerDirectly=false)</annotation>
   </bean>
</deployment>
