/*
* JBoss, Home of Professional Open Source.
* Copyright 2006, Red Hat Middleware LLC, and individual contributors
* as indicated by the @author tags. See the copyright.txt file in the
* distribution for a full listing of individual contributors. 
*
* This is free software; you can redistribute it and/or modify it
* under the terms of the GNU Lesser General Public License as
* published by the Free Software Foundation; either version 2.1 of
* the License, or (at your option) any later version.
*
* This software is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
* Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public
* License along with this software; if not, write to the Free
* Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
* 02110-1301 USA, or see the FSF site: http://www.fsf.org.
*/ 
package org.jboss.aop.microcontainer.beans.metadata;

import java.io.BufferedWriter;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.StringWriter;
import java.util.List;
import java.util.Map;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.jboss.util.xml.DOMWriter;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.xml.sax.SAXException;

/**
 * 
 * @author <a href="kabir.khan@jboss.com">Kabir Khan</a>
 * @version $Revision: 1.1 $
 */
public class XmlLoadableRootElementUtil
{
   public static String getRootElementString(List<Element> elements, String elementName, Map<String, String> elementAttributes)
   {
      try
      {
         StringWriter writer = new StringWriter();
         StringBuffer contents = writer.getBuffer();
         contents.append("<" + elementName + " ");
         if (elementAttributes != null && elementAttributes.size() > 0)
         {
            for (Map.Entry<String, String> entry : elementAttributes.entrySet())
            {
               contents.append(entry.getKey() + "=\"" + entry.getValue() + "\" ");
            }
         }
         contents.append(">");
         
         DOMWriter domWriter = new DOMWriter(new BufferedWriter(writer));
         if (elements != null && elements.size() > 0)
         {
            for (Element child : elements)
            {
               domWriter.print(child);
            }
         }
         
         contents.append("</" + elementName + ">");
         
         String fullDocument = writer.getBuffer().toString();
         return fullDocument;
      }
      catch (DOMException e)
      {
         e.printStackTrace();
         throw e;
      }
   }
   
//   public static Element getRootElement(List<Element> elements, String elementName, Map<String, String> elementAttributes)
//   {
//      String rootString = getRootElementString(elements, elementName, elementAttributes);
//      return createRootElement(rootString);
//   }
//
//   private static Element createRootElement(String rootString)
//   {
//      try
//      {
//         DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
//         DocumentBuilder builder = factory.newDocumentBuilder();
//         Document document = builder.parse(new ByteArrayInputStream(rootString.getBytes()));
//         return document.getDocumentElement();
//      }
//      catch (ParserConfigurationException e)
//      {
//         // AutoGenerated
//         throw new RuntimeException(e);
//      }
//      catch (SAXException e)
//      {
//         // AutoGenerated
//         throw new RuntimeException(e);
//      }
//      catch (IOException e)
//      {
//         // AutoGenerated
//         throw new RuntimeException(e);
//      }
//   }
//   
//   public static void main(String[] args)
//   {
//      Element element = createRootElement("<test name=\"tst\"><child>xx</child></test>");
//   }
//   
}
