<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [
   <!ENTITY buildmagic SYSTEM "../tools/etc/buildmagic/buildmagic.ent">
   <!ENTITY libraries SYSTEM "../thirdparty/libraries.ent">
   <!ENTITY modules SYSTEM "../tools/etc/buildmagic/modules.ent">
   <!ENTITY targets SYSTEM "../tools/etc/buildmagic/targets.ent">
]>

<!-- ====================================================================== -->
<!--                                                                        -->
<!--  JBoss, the OpenSource J2EE webOS                                      -->
<!--                                                                        -->
<!--  Distributable under LGPL license.                                     -->
<!--  See terms of license at http://www.gnu.org.                           -->
<!--                                                                        -->
<!-- ====================================================================== -->


<!-- $Id$ -->

<project default="main" name="JBoss/MicroContainer">

  <!-- ================================================================== -->
  <!-- Setup                                                              -->
  <!-- ================================================================== -->

  <!--
     | Include the common Buildmagic elements.
     |
     | This defines several different targets, properties and paths.
     | It also sets up the basic extention tasks amoung other things.
   -->

  &buildmagic;

  <!--
     | Include the normal targets.
   -->
  &targets;

  <!-- ================================================================== -->
  <!-- Configuration                                                      -->
  <!-- ================================================================== -->

  <!--
     | Configure the build system.
     |
     | This target is invoked by the Buildmagic initialization logic and
     | should contain module specific configuration elements.
   -->

  <target name="configure" unless="configure.disable">

    <!-- =================== -->
    <!-- Basic Configuration -->
    <!-- =================== -->

    <!-- Module name(s) & version -->
    <property name="module.name" value="microcontainer"/>
    <property name="module.Name" value="JBoss MicroContainer"/>
    <property name="module.version" value="2.0.0.M1"/>

    <!-- ========= -->
    <!-- Libraries -->
    <!-- ========= -->

    &libraries;

    <!-- The combined library classpath -->
    <path id="library.classpath">
      <path refid="oswego.concurrent.classpath"/>
      <path refid="junit.junit.classpath"/>
      <path refid="jboss.common.classpath"/>
      <path refid="jboss.test.classpath"/>
      <path refid="jboss.jbossxb.classpath"/>
    </path>

    <!-- ======= -->
    <!-- Modules -->
    <!-- ======= -->

    &modules;
    <!-- The combined dependant module classpath -->
    <path id="dependentmodule.classpath">
       <path refid="jboss.container.classpath"/>
       <path refid="jboss.dependency.classpath"/>
    </path>

    <!-- ============================= -->
    <!-- Paths etc. for the retro task -->
    <!-- ============================= -->
    <property name="build.classes.retro" value="${module.output}/classes-retro"/>
    <property name="build.lib.retro" value="${module.output}/lib14"/>
    <path id="jbossretro.classpath">
      <path refid="apache.ant.classpath"/>
      <path refid="jboss.jbossretro.classpath"/>
      <path refid="jboss/backport.concurrent.classpath"/>
      <path refid="javassist.classpath"/>
    </path>

    <!-- ===== -->
    <!-- Tasks -->
    <!-- ===== -->

    <property name="jar.prefix" value="jboss-microcontainer"/>
    <property name="javac.target" value="1.5"/>
    <property name="javac.source" value="1.5"/>

    <call target="_default:task-init"/>

  </target>

  <!-- ================================================================== -->
  <!-- Compile                                                            -->
  <!-- ================================================================== -->

  <!--
     | Compile everything.
     |
     | This target should depend on other compile-* targets for each
     | different type of compile that needs to be performed, short of
     | documentation compiles.
   -->

  <target name="compile"
	  description="Compile all source files."
	  depends="_default:compile-classes,
              _default:compile-resources,
              _default:compile-etc,
              retro"
  />

  <target name="retro">
     <mkdir dir="${build.lib.retro}"/>
     <taskdef name="retro" classname="org.jboss.ant.tasks.retro.Retro" classpathref="jbossretro.classpath"/>
     <retro compilerclasspathref="jbossretro.classpath" destdir="${build.classes.retro}">
        <classpath refid="jbossretro.classpath"/>
        <classpath refid="library.classpath"/>
        <classpath refid="dependentmodule.classpath"/>
        <classpath>
           <pathelement path="${build.classes}"/>
        </classpath>
        <src path="${build.classes}"/>
     </retro>
  </target>

  <!-- ================================================================== -->
  <!-- Archives                                                           -->
  <!-- ================================================================== -->

  <!--
     |  Build all jar files.
    -->
  <target name="module-jars" depends="init">


     <jar jarfile="${build.lib}/${jar.prefix}.jar" manifest="${build.etc}/default.mf">
       <fileset dir="${build.classes}"/>
       <fileset dir="${build.resources}">
          <include name="schema/**"/>
       </fileset>
     </jar>
     <jar jarfile="${build.lib.retro}/${jar.prefix}14.jar" manifest="${build.etc}/default.mf">
       <fileset dir="${build.classes.retro}"/>
       <fileset dir="${build.resources}">
          <include name="schema/**"/>
       </fileset>
     </jar>
     <!-- Minimal source bundle -->
     <zip destfile="${build.lib}/${jar.prefix}-src.zip">
        <fileset dir="${source.java}">
           <include name="**"/>
        </fileset>
     </zip>
  </target>

   <!-- ================================================================== -->
   <!-- Release                                                            -->
   <!-- ================================================================== -->

   <target name="docbook" depends="init">
      <ant dir="${module.root}/docs/gettingstarted"/>
   </target>

   <target name="make-release-docs" depends="init, docs, docbook">
      <property name="module.release" value="${module.output}/${module.name}-${module.version}"/>
      <mkdir dir="${module.release}"/>

      <copy todir="${module.release}/docs/gettingstarted">
         <fileset dir="${module.output}/docs/gettingstarted"/>
      </copy>

      <copy todir="${module.release}/docs/api">
         <fileset dir="${module.output}/api"/>
      </copy>

      <copy todir="${module.release}/docs/licenses">
         <fileset dir="${project.root}/thirdparty/licenses"/>
      </copy>

      <copy todir="${module.release}">
         <fileset dir="${module.root}/docs/release"/>
      </copy>
   </target>

   <target name="make-release" depends="init">
      <property name="module.release" value="${module.output}/${module.name}-${module.version}"/>
      <mkdir dir="${module.release}"/>
      <mkdir dir="${module.release}/lib"/>
      <copy todir="${module.release}/lib" file="${build.lib}/jboss-microcontainer.jar"/>
      <copy todir="${module.release}/lib" file="${jboss.common.lib}/jboss-common.jar"/>
      <copy todir="${module.release}/lib" file="${jboss.jbossxb.lib}/jboss-xml-binding.jar"/>
      <copy todir="${module.release}/lib" file="${jboss.common.lib}/namespace.jar"/>
      <copy todir="${module.release}/lib" file="${project.root}/aop-mc-int/output/lib/jboss-aop-mc-int.jar"/>
      <copy todir="${module.release}/lib" file="${project.root}/container/output/lib/jboss-container.jar"/>
      <copy todir="${module.release}/lib" file="${project.root}/dependency/output/lib/jboss-dependency.jar"/>
      <copy todir="${module.release}/lib" file="${oswego.concurrent.lib}/concurrent.jar"/>
      <copy todir="${module.release}/lib" file="${apache.xerces.lib}/xercesImpl.jar"/>
      <copy todir="${module.release}/lib" file="${apache.xerces.lib}/xml-apis.jar"/>

      <mkdir dir="${module.release}/lib14"/>
      <copy todir="${module.release}/lib14" file="${build.lib.retro}/jboss-microcontainer14.jar"/>
      <copy todir="${module.release}/lib14" file="${jboss.common.lib}/jboss-common.jar"/>
      <copy todir="${module.release}/lib14" file="${jboss.jbossxb.lib}/jboss-xml-binding.jar"/>
      <copy todir="${module.release}/lib14" file="${jboss.common.lib}/namespace.jar"/>
      <copy todir="${module.release}/lib14" file="${project.root}/aop-mc-int/output/lib14/jboss-aop-mc-int14.jar"/>
      <copy todir="${module.release}/lib14" file="${project.root}/container/output/lib14/jboss-container14.jar"/>
      <copy todir="${module.release}/lib14" file="${project.root}/dependency/output/lib14/jboss-dependency14.jar"/>
      <copy todir="${module.release}/lib14" file="${oswego.concurrent.lib}/concurrent.jar"/>
      <copy todir="${module.release}/lib14" file="${apache.xerces.lib}/xercesImpl.jar"/>
      <copy todir="${module.release}/lib14" file="${apache.xerces.lib}/xml-apis.jar"/>
      <copy todir="${module.release}/lib14" file="${jboss/backport.concurrent.lib}/jboss-backport-concurrent.jar"/>
      <copy todir="${module.release}/lib14" file="${jboss.jbossretro.lib}/jbossretro-rt.jar"/>



      <copy todir="${module.release}/examples">
         <fileset dir="${module.root}/examples"/>
      </copy>
   </target>

   <target name="bin-tgz"  description="Build .tar.gz and .tar.bz2 archives">
      <tar destfile="${module.output}/${module.name}-${module.version}.tar.gz"
           longfile="gnu" compression="gzip">
        <tarfileset dir="${module.output}/${module.name}-${module.version}"
                    prefix="${module.name}-${module.version}">
           <exclude name="**/build/**"/>
           <exclude name="**/dist/**"/>
        </tarfileset>
     </tar>
     <checksum file="${module.output}/${module.name}-${module.version}.tar.gz"/>
     <tar destfile="${module.output}/${module.name}-${module.version}.tar.bz2"
           longfile="gnu" compression="bzip2">
        <tarfileset dir="${module.output}/${module.name}-${module.version}"
                    prefix="${module.name}-${module.version}">
           <exclude name="**/build/**"/>
           <exclude name="**/dist/**"/>
        </tarfileset>
     </tar>
     <checksum file="${module.output}/${module.name}-${module.version}.tar.bz2"/>
   </target>

   <target name="bin-zip" description="Build zip archive">
      <zip destfile="${module.output}/${module.name}-${module.version}.zip">
      <zipfileset dir="${module.output}/${module.name}-${module.version}"
                  prefix="${module.name}-${module.version}">
         <exclude name="**/build/**"/>
         <exclude name="**/dist/**"/>
      </zipfileset>
      </zip>
      <checksum file="${module.output}/${module.name}-${module.version}.zip"/>
   </target>

   <target name="source-tgz">
      <tar destfile="${module.output}/${module.name}-${module.version}-src.tar.gz"
           longfile="gnu" compression="gzip">
         <tarfileset dir="${module.source}"
                     prefix="${module.name}-${module.version}-src">
         </tarfileset>
         <tarfileset dir="${project.root}/container/src"
                     prefix="${module.name}-${module.version}-src">
         </tarfileset>
         <tarfileset dir="${project.root}/dependency/src"
                     prefix="${module.name}-${module.version}-src">
         </tarfileset>
      </tar>
      <checksum file="${module.output}/${module.name}-${module.version}-src.tar.gz"/>

      <tar destfile="${module.output}/${module.name}-${module.version}-src.tar.bz2"
           longfile="gnu" compression="bzip2">
         <tarfileset dir="${module.source}"
                     prefix="${module.name}-${module.version}-src">
         </tarfileset>
         <tarfileset dir="${module.source}"
                     prefix="${module.name}-${module.version}-src">
         </tarfileset>
         <tarfileset dir="${project.root}/container/src"
                     prefix="${module.name}-${module.version}-src">
         </tarfileset>
         <tarfileset dir="${project.root}/dependency/src"
                     prefix="${module.name}-${module.version}-src">
         </tarfileset>
      </tar>
      <checksum file="${module.output}/${module.name}-${module.version}-src.tar.bz2"/>
   </target>

   <!--
    |  Build the release.
   -->
   <target name="module-release"
           depends="main, make-release, make-release-docs, bin-tgz, bin-zip, source-tgz"/>

</project>
