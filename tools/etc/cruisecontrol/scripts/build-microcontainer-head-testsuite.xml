<project name="build-microcontainer-head-testsuite" default="copyresults">

    <property name="cvs.repository" value=":pserver:anonymous@anoncvs.forge.jboss.com:/cvsroot/jboss"/>
    <property name="log.dir" value="${basedir}/logbuild/microcontainer-head-testsuite"/>
    <property name="proj.dir" value="../checkout/microcontainer-head-testsuite"/>
    <property environment="env"/>

    <import file="build-common.xml"/>

    <target name="clean" depends="" description="Cleans checkout directory">
        <sequential>
            <antcall target="clean.checkout">
               <param name="checkout.dir" value="../checkout/microcontainer-head-testsuite"/>
               <param name="artifacts.dir" value="${log.dir}"/>
            </antcall>
            <antcall target="version">
                <param name="java.home" value="/opt/jdk1.5.0_03"/>
                <param name="ant.home" value="${env.ANT_HOME}"/>
            </antcall>
        </sequential>
    </target>

    <target name="getcode" depends="clean" description="Update packages from CVS">
        <svn>
            <checkout url="${svn.url}" destPath="../checkout/${jboss.dir}"/>
        </svn> 
    </target>

    <target name="build" depends="getcode" description="Build the jboss-head project">
        <sequential>
        <exec executable="ant" failonerror="false"  resultproperty="build.returncode" output="${log.dir}/compilejbosshead.log">
            <arg line=" -buildfile ${proj.dir}/build/build.xml"/>
            <env key="PATH" path="/opt/jdk1.5.0_03/bin:${env.PATH}"/>
            <env key="JAVA_HOME" path="/opt/jdk1.5.0_03"/>
        </exec>
        <antcall target="copylogs">
           <param name="dest.dir" value="${log.dir}"/>
           <param name="proj.dir" value="microcontainer-head-testsuite"/>
        </antcall>
        <condition property="build.success">
          <equals arg1="${build.returncode}" arg2="0"/>
        </condition>
        <fail unless="build.success">
          Exit code: ${build.returncode}
          See compilejbosshead.log in Build Artifacts for details.
        </fail>
        </sequential>
    </target>

    <target name="tests" depends="build" description="Runs the container tests">
        <sequential>
        <antcall target="checkout-module">
            <param name="checkout.module" value="container"/>
            <param name="checkout.dir" value="container"/>
        </antcall> 
        <antcall target="checkout-module">
            <param name="checkout.module" value="jboss-dependency"/>
            <param name="checkout.dir" value="dependency"/>
        </antcall>
        <antcall target="checkout-module">
            <param name="checkout.module" value="microkernel"/>
            <param name="checkout.dir" value="kernel"/>
        </antcall>
        <antcall target="checkout-module">
            <param name="checkout.module" value="aop-mc-int"/>
            <param name="checkout.dir" value="aop-mc-int"/>
        </antcall>
        <antcall target="build-module">
            <param name="checkout.dir" value="container"/>
        </antcall> 
        <antcall target="build-module">
            <param name="checkout.dir" value="dependency"/>
        </antcall>
        <antcall target="build-module">
            <param name="checkout.dir" value="kernel"/>
        </antcall>
        <antcall target="build-module">
            <param name="checkout.dir" value="aop-mc-int"/>
        </antcall>         
        <antcall target="runtests">
            <param name="checkout.dir" value="container"/>
        </antcall> 
        <antcall target="runtests">
            <param name="checkout.dir" value="dependency"/>
        </antcall>
        <antcall target="runtests">
            <param name="checkout.dir" value="kernel"/>
        </antcall>
        <antcall target="runtests">
            <param name="checkout.dir" value="aop-mc-int"/>
        </antcall>        
        <antcall target="copylogs">
           <param name="dest.dir" value="${log.dir}"/>
           <param name="proj.dir" value="microcontainer-head-testsuite"/>
        </antcall>
        </sequential>
    </target>
    
    <target name="checkout-module">
        <svn>
            <checkout url="http://anonsvn.jboss.org/repos/jbossas/archives/trunk/${checkout.module}" destPath="../checkout/${jboss.dir}/${checkout.dir}"/>
        </svn> 
    </target>
    
    <target name="build-module" description="Runs the microcontainer tests">
        <exec executable="ant" failonerror="false"  resultproperty="build.${checkout.dir}.returncode" output="${log.dir}/compile.log" append="true">
            <arg line=" -buildfile ${proj.dir}/${checkout.dir}/build.xml"/>
            <env key="PATH" path="/opt/jdk1.5.0_03/bin:${env.PATH}"/>
            <env key="JAVA_HOME" path="/opt/jdk1.5.0_03"/>
        </exec>
        <condition property="build.${checkout.dir}.success">
          <equals arg1="${build.container.returncode}" arg2="0"/>
        </condition>
        <condition property="build.${checkout.dir}.success">
          <equals arg1="${build.dependency.returncode}" arg2="0"/>
        </condition>
        <condition property="build.${checkout.dir}.success">
          <equals arg1="${build.kernel.returncode}" arg2="0"/>
        </condition>
        <condition property="build.${checkout.dir}.success">
          <equals arg1="${build.aop-mc-int.returncode}" arg2="0"/>
        </condition>        
        <fail unless="build.${checkout.dir}.success">
          See compile.log in Build Artifacts for details.
        </fail> 
    </target>
    
    <target name="runtests" description="Runs the microcontainer tests">
        <exec executable="ant" failonerror="false" resultproperty="tests.${checkout.dir}.returncode" output="${log.dir}/tests.log" append="true">
            <arg line=" -buildfile ${proj.dir}/${checkout.dir}/build-test.xml tests"/>
            <env key="PATH" path="/opt/jdk1.5.0_03/bin:${env.PATH}"/>
            <env key="JAVA_HOME" path="/opt/jdk1.5.0_03"/>
        </exec>
        <condition property="tests.${checkout.dir}.success">
          <equals arg1="${tests.container.returncode}" arg2="0"/>
        </condition>
        <condition property="tests.${checkout.dir}.success">
          <equals arg1="${tests.dependency.returncode}" arg2="0"/>
        </condition>
        <condition property="tests.${checkout.dir}.success">
          <equals arg1="${tests.kernel.returncode}" arg2="0"/>
        </condition>
        <condition property="tests.${checkout.dir}.success">
          <equals arg1="${tests.aop-mc-int.returncode}" arg2="0"/>
        </condition>        
        <fail unless="tests.${checkout.dir}.success">
          See tests.log in Build Artifacts for details.
        </fail>
    </target>

    <target name="generatereports" depends="tests" description="Generates HTML reports">
      <mkdir dir="${proj.dir}/build/reports"/>
      <junitreport todir="${proj.dir}/build/reports">
         <fileset dir="${proj.dir}/container/output/reports">
            <include name="TEST-*.xml"/>
         </fileset>
         <fileset dir="${proj.dir}/dependency/output/reports">
            <include name="TEST-*.xml"/>
         </fileset>
         <fileset dir="${proj.dir}/kernel/output/reports">
            <include name="TEST-*.xml"/>
         </fileset>
         <fileset dir="${proj.dir}/aop-mc-int/output/reports">
            <include name="TEST-*.xml"/>
         </fileset>         
          <report format="frames"
            todir="${proj.dir}/build/reports"/>
      </junitreport>
    </target>

    <target name="copyresults" depends="generatereports" description="Copies test results to the logbuild directory">
        <mkdir dir="${log.dir}/results"/>
        <copy todir="${log.dir}/results">
           <fileset dir="${proj.dir}/build/reports"/>
        </copy>
        <copy todir="${log.dir}/results" flatten="true">
           <fileset dir="${proj.dir}/" includes="**/TEST-*.xml"/>
        </copy>
        <antcall target="test-build-failure">
            <param name="fileset.dir" value="${log.dir}/results"/>
            <param name="fileset.includes" value="TEST-*.xml"/>
            <param name="error.text" value="errors=&quot;0&quot;"/>
            <param name="failure.text" value="failures=&quot;0&quot;"/>
        </antcall>
    </target>
</project>

