<project name="build-JBossCache" default="copyresults">

    <property name="cvs.repository" value=":pserver:anonymous@anoncvs.forge.jboss.com:/cvsroot/jboss"/>
    <property name="log.dir" value="${basedir}/logbuild/${jboss.dir}"/>

    <property environment="env"/>
    <import file="build-common-targets.xml"/>

    <target name="clean" depends="" description="Cleans checkout directory">
        <sequential>
            <antcall target="clean.checkout">
               <param name="checkout.dir" value="../checkout/${jboss.dir}"/>
               <param name="artifacts.dir" value="${log.dir}"/>
            </antcall>
            <antcall target="version">
               <param name="java.home" value="${env.JAVA_HOME}"/>
               <param name="ant.home" value="${env.ANT_HOME}"/>
            </antcall>
        </sequential>
    </target>

    <target name="getcode" depends="clean" description="Update packages from CVS">
        <cvs command="co -r ${cvs.branch} -d ${jboss.dir} JBossCache" cvsroot="${cvs.repository}" compressionlevel="3" dest="../checkout" failonerror="true" output="${log.dir}/cvsco.log"/>
    </target>

    <target name="build" depends="getcode" description="Build the jbosscache project">    
        <sequential>
        <exec executable="ant" resultproperty="build.returncode" failonerror="false" output="${log.dir}/compile.log">
            <arg line=" -buildfile ../checkout/${jboss.dir}/build.xml"/>
            <env key="PATH" path="/opt/jdk1.5.0_03/bin:${env.PATH}"/>
            <env key="JAVA_HOME" path="/opt/jdk1.5.0_03"/>            
        </exec>
        <antcall target="copylogs">
           <param name="dest.dir" value="${log.dir}"/>
           <param name="proj.dir" value="${jboss.dir}"/>
        </antcall>
        <condition property="build.success">
          <equals arg1="${build.returncode}" arg2="0"/>
        </condition>
        <fail unless="build.success">
          Exit code: ${build.returncode}
          See compile.log in Build Artifacts for details.
        </fail>
        </sequential>
    </target>

    <target name="tests" depends="build" description="Runs the jbosscache tests">
        <sequential>
        <exec executable="ant" resultproperty="tests.returncode" failonerror="false" output="${log.dir}/tests.log">
            <arg line=" -buildfile ../checkout/${jboss.dir}/build.xml all-unittests-cc interoptests"/>
            <env key="PATH" path="/opt/jdk1.5.0_03/bin:${env.PATH}"/>
            <env key="JAVA_HOME" path="/opt/jdk1.5.0_03"/>            
        </exec>
        <antcall target="copylogs">
           <param name="dest.dir" value="${log.dir}"/>
           <param name="proj.dir" value="${jboss.dir}"/>
        </antcall>
        <condition property="tests.success">
          <equals arg1="${tests.returncode}" arg2="0"/>
        </condition>
        <fail unless="tests.success">
          Exit code: ${tests.returncode}
          See tests.log in Build Artifacts for details.
        </fail>
        </sequential>
    </target>

    <target name="generatereports" depends="tests" description="Generates HTML reports">
        <exec executable="ant">
            <arg line=" -buildfile ../checkout/${jboss.dir}/build.xml reports"/>
        </exec>
    </target>

    <target name="copyresults" depends="generatereports" description="Copies test results to the logbuild directory">
        <mkdir dir="${log.dir}/results"/>
        <copy todir="${log.dir}/results">
           <fileset dir="../checkout/${jboss.dir}/output/reports"/>
        </copy>
        <copy todir="${log.dir}/results">
           <fileset dir="../checkout/${jboss.dir}/output/reports/html"/>
        </copy>
        <delete dir="${log.dir}/results/html"/>
        <copy todir="${log.dir}" failonerror="false" file="../checkout/${jboss.dir}/output/jrunit-report.html"/>
        <copy todir="${log.dir}" failonerror="false" file="../checkout/${jboss.dir}/output/benchmarkChart.jpg"/>
        <copy todir="${log.dir}" failonerror="false" file="../checkout/${jboss.dir}/output/root_benchmark.txt"/>
        <antcall target="test-build-failure">
            <param name="fileset.dir" value="${log.dir}/results"/>
            <param name="fileset.includes" value="TEST-*.xml"/>
            <param name="error.text" value="errors=&quot;0&quot;"/>
            <param name="failure.text" value="failures=&quot;0&quot;"/>
        </antcall>
    </target>
</project>

